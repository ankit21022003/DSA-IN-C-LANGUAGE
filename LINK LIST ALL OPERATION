#include<stdio.h>
#include<stdlib.h>

struct node{
	int data;
	struct node* next;
};

//void traverse(struct node* ptr)                   #1
//{
//	while(ptr!=NULL)
//	{
//		printf("%d\n",ptr->data);
//		ptr=ptr->next;
//
//	}
//}

//struct node* insertatbegg(struct node* head,int data)             #2
//{
//	struct node* newnode=(struct node*)malloc(sizeof(struct node));
//	newnode->next=head;
//	newnode->data=data;
//	head=newnode;
//	return newnode;
//	
//}

//struct node* insertatindex(struct node * head,int value,int index)  #3
//{
//	struct node* newnode=(struct node*)malloc(sizeof(struct node));
//	struct node* ptr=head;
//	newnode->data=value;	
//	int i=0;
//	while(i!=index-1)
//	{
//		ptr=ptr->next;
//		i++;
//	}
//	newnode->next=ptr->next;
//	ptr->next=newnode;
//	return head;
//}

//struct node* insertatend(struct node* head,int value)  #4
//{
//	struct node* newnode=(struct node*)malloc(sizeof(struct node));
//	newnode->data=value;
//	struct node* p=head;
//	while(p->next!=NULL)
//	{
//		p=p->next;
//	}
//	p->next=newnode;
//	newnode->next=NULL;
//	return head;
//}
//struct node* insertafternode(struct node* head,struct node* first,int value)
//{
//	struct node* newnode=(struct node*)malloc(sizeof(struct node));     #5
//	newnode->data=value;
//	newnode->next=first->next;
//	first->next=newnode;
//	return head;
//}
//struct node* deletefirstnode(struct node* head)                 #6
//{
//	struct node* ptr=head;
//	head=head->next;
//free(ptr);
//	return head;
//}

//struct node* deleteanodeinindex(struct node*head,int index)    #7
//{
//	struct node* p=head;
//	int i=0;
//	while(i<index-1)
//	{
//		p=p->next;
//		i++;
//	}
//	struct node* q=p->next;
//	p->next=q->next;
//	
//	return head;
//}

//struct node* deletelastnode(struct node* head)          #8
//{
//	struct node* p=head;
//	
//	while(p->next->next!=NULL)
//	{
//		p=p->next;
//	}
//	struct node* q=p->next;
//	p->next=q->next;
//  free(q);
//	return head;	
//}


//struct node* deleteanodeatvalue(struct node*head,int value)     #9
//{
//	struct node* p=head;
//	
//	while(p->next->data!=value)
//	{
//		p=p->next;
//	}
//	struct node* q=p->next;
//	p->next=q->next;
//	free(q);
//	return head;
//}






int main()
{
	struct node* head=(struct node*)malloc(sizeof(struct node));
	struct node* first=(struct node*)malloc(sizeof(struct node));
	struct node* second=(struct node*)malloc(sizeof(struct node));
	struct node* third=(struct node*)malloc(sizeof(struct node));
	head->data=50;
	head->next=first;
	first->data=60;
	first->next=second;
	second->data=70;
	second->next=third;
	third->data=80;
	third->next=NULL;
	
//	traverse(head);                    #1


// INSERT AT BEG                      #2
//	head=insertatbegg(head ,40);
//	traverse(head);

// INSERT AT INDEX                    #3
//	head=insertatindex(head,30,2);    
//	traverse(head);

// INSERT AT END 					  #4
//	head=insertatend(head,100);
//	traverse(head);

//INSERT AFTER A NODE                 #5
//head=insertafternode(head,head,55);
//traverse(head);

//head=deletefirstnode(head);            #6
//traverse(head);

//head=deleteanodeatindex(head,2);      #7
//traverse(head);

//head=deletelastnode(head);             #8
//traverse(head);

//head=deleteanodeatvalue(head,70);       #9
//traverse(head);


}
